---
kind: pipline
name: normal-image

workspace:
  path: /var/app

steps:
  - name: slack notification on start
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      template: >
        {{repo.owner}}/{{repo.name}} ({{build.branch}}) normal-image build #{{build.number}} start: {{build.link}}
    when:
      branch:
        - main
        - develop
      event:
        - push

  - name: build latest image
    image: plugins/docker
    settings:
      repo: miwpayou0808/mastdon-markov-bot
      auto_tag: true
      username:
        from_secret: dockerhub_username
      password:
        from_secret: dockerhub_password
      squash: true
    when:
      branch:
        - main
        - develop
      event:
        - push

  - name: slack notification on complete
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      template: >
        {{#success build.status}}
           {{repo.owner}}/{{repo.name}} ({{build.branch}}) normal-image build #{{build.number}} succeeded: {{build.link}}
        {{else}}
        {{repo.owner}}/{{repo.name}} ({{build.branch}}) normal-image build #{{build.number}} failed: {{build.link}}
        {{/success}}
    when:
      branch:
        - main
        - develop
      event:
        - push
      status:
        - success
        - failure

---
kind: pipline
name: lambda-image

workspace:
  path: /var/task

steps:
  - name: slack notification on start
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      template: >
        {{repo.owner}}/{{repo.name}} ({{build.branch}}) lambda-image build #{{build.number}} start: {{build.link}}
    when:
      branch:
        - main
        - develop
      event:
        - push

  - name: build lambda image
    image: plugins/ecr
    settings:
      repo: mastdon-markov-bot
      region: ap-northeast-3
      dockerfile: lambda.Dockerfile
      auto_tag: true
      auto_tag_suffix: lambda
      access_key:
        from_secret: ecr_username
      access_secret:
        from_secret: ecr_secret
      registry:
        from_secret: ecr_repository
      squash: true
    when:
      branch:
        - main
        - develop
      event:
        - push

  - name: slack notification on complete
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      template: >
        {{#success build.status}}
           {{repo.owner}}/{{repo.name}} ({{build.branch}}) lambda-image build #{{build.number}} succeeded: {{build.link}}
        {{else}}
        {{repo.owner}}/{{repo.name}} ({{build.branch}}) lambda-image build #{{build.number}} failed: {{build.link}}
        {{/success}}
    when:
      branch:
        - main
        - develop
      event:
        - push
      status:
        - success
        - failure